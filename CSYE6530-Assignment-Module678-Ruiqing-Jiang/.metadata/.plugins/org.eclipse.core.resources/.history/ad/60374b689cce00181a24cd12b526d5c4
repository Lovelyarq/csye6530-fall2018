'''
Created on 2018年9月15日

@author: jrq
'''
import random
from time import sleep
import threading
from labs.common import SensorData



DEFAULT_RATE_IN_SEC = 10


Sens = SensorData.SensorData()


class TempSensorEmulator (threading.Thread):
    enableEmulator = False
    rateInSec      = DEFAULT_RATE_IN_SEC
    lowVal = 0
    highVal = 30
    curTemp = 0


    def __init__(self, rateInSec = DEFAULT_RATE_IN_SEC):
        super(TempSensorEmulator, self).__init__()      
        if rateInSec > 0:
            self.rateInSec = rateInSec
    

        
    def getCurTemp(self):
        print('test222:' + str(self.curTemp))
        return self.curTemp
    
    def setT(self,temp):
        self.curTemp = temp
        self.get()

    def run(self):
        while True:
            if self.enableEmulator:
                self.curTemp = random.uniform(float(self.lowVal), float(self.highVal)) 
                print('\n--------------------')
                print('Emulator New Sensor Readings:')
                print(' ' + str(self.curTemp))
                
                global a 
                a = self.curTemp
                     
                self.setT(self.curTemp)
                #Sens.addValue(self.curTemp)
                #self.SensorData.addValue(self.curTemp)

                
                sleep(self.rateInSec)
                
                
                
                
            