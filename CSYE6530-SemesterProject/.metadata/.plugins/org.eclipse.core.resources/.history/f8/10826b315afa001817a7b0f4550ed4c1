package semesterProject;

import java.util.logging.Logger;

import org.eclipse.californium.core.CoapResource;
import org.eclipse.californium.core.coap.CoAP.ResponseCode;
import org.eclipse.californium.core.server.resources.CoapExchange;

public class TempResourceHandler extends CoapResource {
	// static
	private static final Logger _Logger = Logger.getLogger(TempResourceHandler.class.getName());

	
	private String _userName = "A1E-hRhHhHVjakJvL8VNMxjLCzfNN7BOMJ";
	private String _authToken = null;
	private String _pemFileName = "/Users/jrq/Documents/pem/ubidots.pem";
	private String _host = "things.ubidots.com";
	
	private MqttClientConnector _Client;
	
	// constructors
	public TempResourceHandler() {
		super("temp");
		// TODO Auto-generated constructor stub
	}

	public TempResourceHandler(String name) {
		super(name);
		// TODO Auto-generated constructor stub
	}

	/**
	 * @param name
	 * @param visible
	 */
	public TempResourceHandler(String name, boolean visible) {
		super(name, visible);
	}

	// public methods

	@Override
	/**
	 * Post is to create a resource
	 *
	 */
	public void handlePOST(CoapExchange ce) {
		String responseMsg = "Here's the reponse to temp request::" + super.getName();

		System.out.println(ce.getRequestText());
		ce.respond(ResponseCode.VALID, responseMsg);
		
		
	
		//Start Mqtt clientCloud
		MqttClientConnector _mqttClient = new MqttClientConnector(_host,_userName, _authToken,_pemFileName);
		_mqttClient.connect();
		String topicName = "/v1.6/devices/homeiotgateway/tempsensor";
		String payload = ce.getRequestText();
		_mqttClient.publishMessage(topicName, 2, payload.getBytes());
		_mqttClient.disconnect();
	

		_Logger.info("Handling POST:" + responseMsg);
		_Logger.info(ce.getRequestCode().toString() + ": " + ce.getRequestText());
		
	}

	@Override
	/**
	 * Put is to update a resource
	 *
	 */
	public void handlePUT(CoapExchange ce) {
		String responseMsg = "Here's the reponse to temp request::" + super.getName();

		ce.respond(ResponseCode.VALID, responseMsg);

		_Logger.info("Handling PUT:" + responseMsg);
		_Logger.info(ce.getRequestCode().toString() + ": " + ce.getRequestText());
	}

	@Override
	/**
	 * Get is to read or get a resource
	 *
	 */
	public void handleGET(CoapExchange ce) {

		String responseMsg = "Here's the reponse to temp request::" + super.getName();
		
		
		ce.respond(ResponseCode.VALID, responseMsg);

		_Logger.info("Handling GET:" + responseMsg);
		_Logger.info(ce.getRequestCode().toString() + ": " + ce.getRequestText());
		
	}

	@Override
	/**
	 * Post is to delete a resource
	 *
	 */
	public void handleDELETE(CoapExchange ce) {
		String responseMsg = "Here's the reponse to temp request::" + super.getName();

		ce.respond(ResponseCode.VALID, responseMsg);

		_Logger.info("Handling DELETE:" + responseMsg);
		_Logger.info(ce.getRequestCode().toString() + ": " + ce.getRequestText());

	}
}
